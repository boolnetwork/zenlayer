[package]
name = "zenlayer-dev-runtime"
version = "1.0.0"
description = "The substrate runtime for zenlayer Node development"
authors = { workspace = true }
homepage = { workspace = true}
edition = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
build = "build.rs"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# third-party dependencies
parity-scale-codec = { workspace = true }
scale-info = { workspace = true }
hex-literal = { workspace = true, optional = true }
rlp = { workspace = true, optional = true }
sha3 = { workspace = true, optional = true }
num_enum = { workspace = true }

# zenlayer
zenlayer-common-runtime = { workspace = true }
zenlayer-dev-constants = { workspace = true }
bp-core = { workspace = true }

# FRAME dependencies
frame-system = { workspace = true }
frame-support = { workspace = true }
frame-executive = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
pallet-aura = { workspace = true }
pallet-balances = { workspace = true, features = ["insecure_zero_ed"] }
pallet-grandpa = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-validator-set = { workspace = true }
pallet-session = { workspace = true }

# substrate primitives
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true, features = ["serde"] }
sp-core = { workspace = true, features = ["serde"] }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true, features = ["serde"] }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true, features = ["serde"] }
sp-io = { workspace = true }
sp-genesis-builder = { workspace = true }

# Frontier
pallet-evm = { workspace = true, features = ["forbid-evm-reentrancy"] }
pallet-evm-chain-id = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true, features = ["forbid-evm-reentrancy"] }
pallet-base-fee = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"] }
fp-evm = { workspace = true, features = ["serde"] }
fp-rpc = { workspace = true }
fp-rpc-debug = { workspace = true }
fp-rpc-txpool = { workspace = true }
fp-rpc-evm-tracing-events = { workspace = true, optional = true }
fp-account = { workspace = true, features = ["serde"]}
evm-tracer = { workspace = true, optional = true }

# Precompiled Contracts
pallet-evm-precompile-simple = { workspace = true }
pallet-evm-precompile-bn128 = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-blake2 = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }

precompile-utils = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
std = [
	"parity-scale-codec/std",
	"scale-info/std",
	"zenlayer-common-runtime/std",
	"zenlayer-dev-constants/std",
	"num_enum/std",
	"bp-core/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"pallet-aura/std",
	"pallet-balances/std",
	"pallet-grandpa/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-evm/std",
	"pallet-evm-chain-id/std",
	"pallet-dynamic-fee/std",
	"pallet-ethereum/std",
	"pallet-base-fee/std",
	"pallet-session/std",
	"pallet-validator-set/std",
	"sp-api/std",
	"sp-consensus-aura/std",
	"sp-block-builder/std",
	"sp-core/std",
	"sp-io/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"sp-genesis-builder/std",
	"fp-self-contained/std",
	"fp-evm/std",
	"fp-rpc/std",
	"fp-rpc-debug/std",
	"fp-rpc-txpool/std",
	"fp-rpc-evm-tracing-events/std",
	"fp-account/std",
	"evm-tracer/std",
	"substrate-wasm-builder",
	"precompile-utils/std",
	"pallet-evm-precompile-simple/std",
	"pallet-evm-precompile-bn128/std",
	"pallet-evm-precompile-modexp/std",
	"pallet-evm-precompile-blake2/std",
]
evm-tracing = [
	"rlp",
	"sha3",
	"evm-tracer",
	"fp-rpc-evm-tracing-events",
]
runtime-wasm = []
runtime-benchmarks = [
	"hex-literal",
	"sp-runtime/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
]
